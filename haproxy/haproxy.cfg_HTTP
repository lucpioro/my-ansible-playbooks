# Global settings
#---------------------------------------------------------------------
global
    maxconn     20000
    log         /dev/log local5 debug
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
#   option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          300s
    timeout server          300s
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 20000

listen stats
    bind :9000
    mode http
    stats enable
    stats uri /

frontend ocphttpin
  bind *:80
  mode http
  stats enable
  option httplog
  stats uri /haproxy?stats
  option httpclose
  option forwardfor

  acl http_ocp39 hdr_dom(host) -i apps.bizotdc.tech
  acl http_ocp311 hdr_dom(host) -i ocp.bizotdc.tech
  use_backend ocp39_http if http_ocp39
  use_backend ocp311_http if http_ocp311

frontend ocphttpsin
  bind *:443
  mode tcp
  option tcplog
  tcp-request  inspect-delay 5s
  tcp-request content accept if { req_ssl_hello_type 1 }
  acl host_ocp39 req.ssl_sni -m sub -i apps.bizotdc.tech
  acl host_ocp311 req.ssl_sni -m sub -i ocp.bizotdc.tech

  use_backend ocp39_cluster if host_ocp39
  use_backend ocp311_cluster if host_ocp311

frontend  atomic-openshift-api
    bind *:8443
    default_backend atomic-openshift-api
    mode tcp
    option tcplog

backend ocp311_cluster
    mode tcp
    option tcplog
    # maximum SSL session ID length is 32 bytes.
    stick-table type binary len 32 size 30k expire 30m
    acl clienthello req_ssl_hello_type 1
    acl serverhello rep_ssl_hello_type 2
    # use tcp content accepts to detects ssl client and server hello.
    tcp-request inspect-delay 5s
    tcp-request content accept if clienthello
    # no timeout on response inspect delay by default.
    tcp-response content accept if serverhello
    stick on payload_lv(43,1) if clienthello
    # Learn on response if server hello.
    stick store-response payload_lv(43,1) if serverhello
    option ssl-hello-chk
    server 	node1 192.168.0.180:443 check

backend ocp39_cluster
    mode tcp
    option tcplog
    # maximum SSL session ID length is 32 bytes.
    stick-table type binary len 32 size 30k expire 30m
    acl clienthello req_ssl_hello_type 1
    acl serverhello rep_ssl_hello_type 2
    # use tcp content accepts to detects ssl client and server hello.
    tcp-request inspect-delay 5s
    tcp-request content accept if clienthello
    # no timeout on response inspect delay by default.
    tcp-response content accept if serverhello
    stick on payload_lv(43,1) if clienthello
    # Learn on response if server hello.
    stick store-response payload_lv(43,1) if serverhello
    option ssl-hello-chk
    server 	node2 192.168.0.124:443 check

backend ocp39_http
  mode http
  option httplog
  server openshift 192.168.0.124:80 check

backend ocp311_http
  mode http
  option httplog
  server openshift311 192.168.0.180:80 check

backend atomic-openshift-api
    balance source
    mode tcp
    option tcplog
    server      master0 192.168.0.121:8443 check
    server      master1 192.168.0.122:8443 check
    server      master2 192.168.0.123:8443 check
